const express = require('express');
const axios = require('axios');
const cheerio = require('cheerio');

const PORT = 3000;
const app = express();
app.use(express.json());

app.get('/download/twitter', async (req, res) => {
  try {
    const url = req.query.url;
    if (!url) {
      return res.status(400).json({
        creator: 'flex-dev',
        message: 'Please provide a Twitter/X video URL'
      });
    }

    // Send POST request to ssstwitter.com
    const response = await axios.post(
      'https://ssstwitter.com/',
      new URLSearchParams({
        'id': url,
        'locale': 'en',
        'tt': '56aa9afc4a4562a8f08213a09ddb7b85', // Note: This may need to be dynamic
        'ts': '1751622801', // Note: This may need to be dynamic
        'source': 'form'
      }),
      {
        headers: {
          'accept': '*/*',
          'accept-language': 'en-US,en;q=0.9,ar;q=0.8',
          'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
          'hx-current-url': 'https://ssstwitter.com/',
          'hx-request': 'true',
          'hx-target': 'target',
          'origin': 'https://ssstwitter.com',
          'priority': 'u=1, i',
          'referer': 'https://ssstwitter.com/',
          'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
          'sec-ch-ua-mobile': '?0',
          'sec-ch-ua-platform': '"Windows"',
          'sec-fetch-dest': 'empty',
          'sec-fetch-mode': 'cors',
          'sec-fetch-site': 'same-origin',
          'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
          'cookie': '_ga=GA1.1.61770727.1751815611; _ga_RCQKEYPTD1=GS2.1.s1751815611$o1$g0$t1751815618$j53$l0$h0'
        }
      }
    );

    // Check if response contains data
    if (!response.data) {
      throw new Error('No HTML data found in response');
    }

    // Load HTML with Cheerio
    const $ = cheerio.load(response.data);

    // Remove unwanted elements (like ads and scripts)
    $('div.ads-slot').remove();
    $('script').remove();

    // Initialize result object
    const result = {
      title: '',
      duration: '',
      thumbnail: undefined,
      downloadLinks: {}
    };

    // Extract title
    result.title = $('h2').text().trim() || $('meta[property="og:title"]').attr('content') || 'No title found';

    // Extract duration
    result.duration = $('meta[property="og:video:duration"]').attr('content') || 'No duration found';

    // Extract thumbnail
    result.thumbnail = $('meta[property="og:image"]').attr('content') || $('img').first().attr('src') || undefined;

    // Extract download links from <a> tags with class 'download_link download-btn'
    $('a.download_link.download-btn').each((i, element) => {
      const quality = $(element).find('span').text().trim().replace('Download', '').trim();
      const url = $(element).attr('href') || $(element).attr('data-directurl');
      if (quality && url) {
        result.downloadLinks[quality] = url;
      }
    });

    // Send response
    res.json({
      creator: 'flex-dev',
      result: result
    });

  } catch (error) {
    console.error('Error:', error.message);
    res.status(500).json({
      creator: 'flex-dev',
      message: 'An error occurred while processing the request',
      error: error.message
    });
  }
});

app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});